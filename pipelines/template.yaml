parameters:
- name: dryrun
  type: boolean
  default: false
- name: environment
  type: string
- name: directory
  type: string
- name: pool
  type: string
  default: private

jobs:  
  - deployment: devplan
    displayName: Deploy ${{ parameters.environment }} (Plan)
    pool:
      name: ${{ parameters.pool }}     
    environment: 'infrastructure-${{ parameters.environment }}'
    strategy:
      runOnce:
        deploy:
          steps: 
            - checkout: self       
            - task: AzureCLI@2
              displayName: Set creation variables
              inputs:
                azureSubscription: ReplaceMe 
                scriptType: bash
                scriptLocation: inlineScript
                addSpnToEnvironment: true
                inlineScript: |
                  echo "##vso[task.setvariable issecret=true;variable=AZURE_BEARER_TOKEN]$(az account get-access-token --query "accessToken" --output tsv)"
                  echo "##vso[task.setvariable issecret=false;variable=AZURE_CLIENT_ID]$servicePrincipalId"
                  echo "##vso[task.setvariable issecret=true;variable=AZURE_CLIENT_SECRET]$servicePrincipalKey"
                  echo "##vso[task.setvariable issecret=false;variable=AZURE_TENANT_ID]$tenantId"
                  echo "##vso[task.setvariable issecret=true;variable=AZURE_SUBSCRIPTION_ID]$(az account show --query "id" --output tsv)"
                  find .
            - task: Bash@3
              displayName: Terraform Plan (${{ parameters.environment }})
              env: 
                ARM_CLIENT_ID: $(AZURE_CLIENT_ID)
                ARM_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
                ARM_TENANT_ID: $(AZURE_TENANT_ID)   
                ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)   
              inputs:
                targetType: 'inline'
                workingDirectory: '${{ parameters.environment }}/${{ parameters.directory }}/'
                script: |            
                  terraform init
                  terraform plan
  - deployment: devapply
    displayName: Deploy ${{ parameters.environment }} (Apply)
    dependsOn: devplan
    pool:
      name: private     
    environment: 'infrastructure-${{ parameters.environment }}'
    condition: and(succeeded(), eq('${{ parameters.dryrun }}', 'false'))
    strategy:
      runOnce:
        deploy:
          steps:          
            - checkout: self
            - task: AzureCLI@2
              displayName: Set creation variables
              inputs:
                azureSubscription: replaceMe 
                scriptType: bash
                scriptLocation: inlineScript
                addSpnToEnvironment: true
                inlineScript: |
                  echo "##vso[task.setvariable issecret=true;variable=AZURE_BEARER_TOKEN]$(az account get-access-token --query "accessToken" --output tsv)"
                  echo "##vso[task.setvariable issecret=false;variable=AZURE_CLIENT_ID]$servicePrincipalId"
                  echo "##vso[task.setvariable issecret=true;variable=AZURE_CLIENT_SECRET]$servicePrincipalKey"
                  echo "##vso[task.setvariable issecret=false;variable=AZURE_TENANT_ID]$tenantId"
                  echo "##vso[task.setvariable issecret=true;variable=AZURE_SUBSCRIPTION_ID]$(az account show --query "id" --output tsv)"
                  find .
            - task: Bash@3
              displayName: Terraform Apply (${{ parameters.environment }})                              
              env: 
                ARM_CLIENT_ID: $(AZURE_CLIENT_ID)
                ARM_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
                ARM_TENANT_ID: $(AZURE_TENANT_ID)   
                ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)   
              inputs:
                targetType: 'inline'
                workingDirectory: '${{ parameters.environment }}/${{ parameters.directory }}/'
                script: |            
                  terraform init
                  terraform plan
                  echo "This would have been an apply. (Demo)"                  
                  